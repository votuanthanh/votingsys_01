{"version":3,"sources":["jqAddImageOption.js"],"names":[],"mappingsfile":"jqAddImageOption.js","sourcesContent":["/**\n * Add Image For Option\n */\nfunction jqAddImageOption(config = {}) {\n    this.initDom(config);\n    this.bindEvents();\n}\n\njqAddImageOption.prototype.extendOptions = function (config) {\n    var defaults = {\n        /**\n         * DOM of option\n         */\n        wrapperPoll: '.poll-option',\n        parentOption: '.form-group',\n        thumbImageOption: '.render-img',\n        elParentOption: '',\n        srcThumbImageOption: '',\n        btnChooseImage: '.upload-photo',\n        horizontalWrapper: '',\n\n        /**\n         * DOM Conent Thumbnail Option\n         */\n        boxThumb: '.box-media-image',\n        deleteImg: '.deleteImg',\n        elBoxThumb: '',\n        elBtnChooseImage: '',\n\n        // Message Validate\n        messages: 'div[data-poll]',\n\n        /**\n         * DOM of win-frame option to add image that by link or upload file\n         */\n        frImage: \"#frame-upload-image\",\n        frUploadFile: '.photo-tb-upload',\n        frPreImage: '.img-pre-option',\n        frAddImgLink: '.add-image-by-link',\n        frInputText: '.photo-tb-url-txt',\n        frDelPhoto: '.photo-tb-del',\n        frConfirmYes: '.btn-yes',\n        frInputFileTemp: '.fileImgTemp',\n        frContentError : '.error-win-img',\n    }\n    var options = $.extend(defaults, config);\n\n    return options;\n}\n\njqAddImageOption.prototype.initDom = function (config) {\n    var options = this.extendOptions(config);\n\n    this.wrapperPoll = options.wrapperPoll;\n    this.parentOption = options.parentOption;\n    this.thumbImageOption = options.thumbImageOption;\n    this.elParentOption = options.elParentOption;\n    this.srcThumbImageOption = options.srcThumbImageOption;\n    this.btnChooseImage = options.btnChooseImage;\n    this.horizontalWrapper = options.horizontalWrapper;\n\n    this.boxThumb = options.boxThumb;\n    this.deleteImg = options.deleteImg;\n    this.elBoxThumb = options.elBoxThumb;\n    this.elBtnChooseImage = options.elBtnChooseImage;\n\n    // Object Message For Client\n    this.messages = this.setMessage(options.messages);\n\n    this.frUploadFile = options.frUploadFile;\n    this.frImage = options.frImage;\n    this.frPreImage = options.frPreImage;\n    this.frAddImgLink = options.frAddImgLink;\n    this.frInputText = options.frInputText;\n    this.frDelPhoto = options.frDelPhoto;\n    this.frConfirmYes = options.frConfirmYes;\n    this.frInputFileTemp = options.frInputFileTemp;\n    this.frContentError = options.frContentError;\n    this.frInputHiddenTemp = '';\n    this.addByLink = false;\n}\n\njqAddImageOption.prototype.setMessage = function (selectorMessage) {\n    var dataMessage = $(selectorMessage).data(selectorMessage.match(/div\\[data-(.*)\\]/)[1]);\n\n    if (typeof dataMessage === \"undefined\") {\n        return;\n    }\n\n    if (typeof dataMessage.message != \"undefined\") {\n        return dataMessage.message;\n    }\n\n    return dataMessage;\n}\n\njqAddImageOption.prototype.bindEvents = function () {\n    $(this.wrapperPoll).on('click', this.btnChooseImage, this.showIframe.bind(this));\n    $(this.frUploadFile).on('click', this.showBoxUpload.bind(this));\n    $(this.frInputFileTemp).on('change', this.preImage.bind(this));\n    $(this.frAddImgLink).on('click', this.addImageByLink.bind(this));\n    $(this.frDelPhoto).on('click', this.delPhoto.bind(this));\n    $(this.frConfirmYes).on('click', this.confirmYes.bind(this));\n    $(this.wrapperPoll).on('click', this.deleteImg, this.deleteQuick.bind(this));\n}\n\njqAddImageOption.prototype.deleteQuick = function (e) {\n    var self = e.currentTarget;\n    var elBoxThumb = $(self).closest(this.boxThumb);\n\n    this.handleDelete(elBoxThumb);\n}\n\njqAddImageOption.prototype.handleDelete = function (elBoxThumb) {\n    if (!elBoxThumb.siblings('input[name^=optionDeleteImage]').length) {\n        var idOption = elBoxThumb.closest(this.parentOption).prop('id');\n        var inputDeleteImg = $('<input>').attr({\n            type: 'hidden',\n            name: 'optionDeleteImage[' + idOption + ']',\n            value: idOption,\n        });\n        elBoxThumb.closest(this.parentOption).prepend(inputDeleteImg);\n    }\n\n    elBoxThumb.hide();\n    elBoxThumb.find(this.thumbImageOption).attr('src', '');\n    elBoxThumb.siblings('input[name^=optionImage]').val('');\n}\n\njqAddImageOption.prototype.addImageByLink = function () {\n    var urlImage = $(this.frInputText).val().trim();\n\n    if (urlImage == '') {\n        this.showMessage(this.messages.empty_link_image);\n\n        return;\n    }\n\n    this.checkTimeLoadImage(urlImage, function (result) {\n        if (result == 'success') {\n            this.removeMessage();\n\n            var idOption = this.elParentOption.attr('id');\n            var inputUrlText = $('<input>').attr({\n                type: 'hidden',\n                name: 'optionImage[' + idOption + ']',\n                value: ''\n            });\n\n            var elOldUrlText = this.elParentOption.find('input[type=hidden]').not('input[name^=optionDeleteImage]');\n\n            if (elOldUrlText.length) {\n                elOldUrlText.remove();\n            }\n\n            this.elParentOption.prepend(inputUrlText);\n            this.frInputHiddenTemp = urlImage;\n            this.addByLink = true;\n\n            $(this.frInputFileTemp).val('');\n            $(this.frPreImage).attr('src', urlImage);\n            $(this.frInputText).val('');\n\n        } else if (result == 'error') {\n            this.showMessage(this.messages.not_type_url_image);\n        } else {\n            this.showMessage(this.messages.time_out_url_image);\n        }\n    }.bind(this));\n}\n\njqAddImageOption.prototype.showMessage = function (message) {\n    $(this.frContentError).text(message).show();\n}\n\njqAddImageOption.prototype.removeMessage = function (message) {\n    $(this.frContentError).text('').hide();\n}\n\njqAddImageOption.prototype.setSrcFramePhoto = function (srcImg) {\n    this.removeMessage();\n    $(this.frPreImage).attr('src', srcImg);\n    $(this.frInputText).val('');\n}\n\njqAddImageOption.prototype.delPhoto = function () {\n    $(this.frPreImage).attr('src', '');\n    $(this.frInputFileTemp).val('');\n    $(this.frInputText).val('');\n    this.removeMessage();\n    this.frInputHiddenTemp = '';\n}\n\njqAddImageOption.prototype.confirmYes = function () {\n    var srcPreImage = $(this.frPreImage).attr('src');\n    var elThumbImg = this.elParentOption.find('img');\n\n    if (srcPreImage != '') {\n        elThumbImg.attr('src', srcPreImage).show();\n        this.elBoxThumb.css('display', 'inline-block');\n        this.elParentOption.find('input[type=file]').remove();\n\n        if (this.addByLink) {\n            this.elParentOption.find('input[type=hidden]')\n                .not('input[name^=optionDeleteImage]')\n                .val(this.frInputHiddenTemp);\n        } else {\n            var elCloneInputFile = $(this.frInputFileTemp).clone();\n            var idOption = this.elParentOption.attr('id');\n\n            // Add attribute for file input option\n            elCloneInputFile.attr({\n                name: 'optionImage[' + idOption + ']',\n                class : 'file',\n                style : ''\n            }).removeAttr('style');\n\n            this.elParentOption.find('input[type=hidden]').remove();\n            this.elParentOption.prepend(elCloneInputFile);\n            this.frInputHiddenTemp = '';\n        }\n\n        // Init trigger change input File\n        $(this.frInputFileTemp).val('');\n\n        // Scroll to div\n        this.scrollToDiv();\n    } else {\n        var elBoxThumb = $(this.elParentOption).find(this.boxThumb);\n\n        this.handleDelete(elBoxThumb);\n    }\n\n    //window.checkImageSame();\n    $(this.frImage).modal('hide');\n}\n\njqAddImageOption.prototype.showIframe = function (e) {\n    var self = e.currentTarget;\n\n    this.removeMessage();\n\n    // Init element when click show box\n    this.elParentOption = $(self).closest(this.parentOption);\n    this.elBoxThumb = this.elParentOption.find(this.boxThumb);\n    this.srcThumbImageOption = this.elParentOption.find(this.thumbImageOption).attr('src');\n\n    if (this.srcThumbImageOption.length) {\n        this.setSrcFramePhoto(this.srcThumbImageOption);\n    } else {\n        $(this.frPreImage).attr('src', '');\n    }\n\n    $(this.frImage).modal('show');\n}\n\njqAddImageOption.prototype.showBoxUpload = function (e) {\n    $(this.frInputFileTemp).click();\n}\n\njqAddImageOption.prototype.preImage = function (e) {\n\n    var self = this;\n    var input = $(self.frInputFileTemp)[0];\n\n    this.addByLink = false;\n\n    if (this.checkExtensionImage(input.value)) {\n        this.removeMessage();\n\n        if (input.files && input.files[0]) {\n            var reader = new FileReader();\n            reader.onload = function(e) {\n                $(self.frPreImage).attr('src', e.target.result);\n            }\n            reader.readAsDataURL(input.files[0]);\n        }\n    } else {\n        this.showMessage(this.messages.image);\n    }\n}\n\njqAddImageOption.prototype.checkTimeLoadImage = function(url, callback, timeout) {\n    var timeout = timeout || 3000;\n    var timedOut = false, timer;\n    var img = new Image();\n\n    img.onerror = img.onabort = function() {\n        if (!timedOut) {\n            clearTimeout(timer);\n            callback(\"error\");\n        }\n    };\n\n    img.onload = function() {\n        if (!timedOut) {\n            clearTimeout(timer);\n            callback(\"success\");\n        }\n    };\n\n    img.src = url;\n\n    // Time out when load image over 5s\n    timer = setTimeout(function() {\n        timedOut = true;\n        callback(\"timeout\");\n    }, timeout);\n}\n\njqAddImageOption.prototype.checkExtensionImage = function (value) {\n    var extension = value.substring(value.lastIndexOf('.') + 1).toLowerCase();\n    var ruleExtension = ['gif', 'png', 'bmp', 'jpeg', 'jpg'];\n\n    if (ruleExtension.indexOf(extension) > -1) {\n        return true;\n    }\n\n    return false;\n}\n\njqAddImageOption.prototype.scrollToDiv = function (){\n    var scrollHeight = $(this.horizontalWrapper).prop(\"scrollHeight\");\n\n    if (scrollHeight > 400) {\n        $(this.horizontalWrapper).animate({\n                scrollTop: scrollHeight\n        }, 1000);\n    }\n}\n"]}